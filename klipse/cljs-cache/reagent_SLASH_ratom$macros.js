// Compiled by ClojureScript 1.10.597
goog.provide("reagent.ratom$macros");
var ret__12562__auto___310 = (function (){
reagent.ratom$macros.reaction = (function reagent$ratom$macros$reaction(var_args){
var args__12462__auto__ = [];
var len__12445__auto___311 = arguments.length;
var i__12446__auto___312 = (0);
while(true){
if((i__12446__auto___312 < len__12445__auto___311)){
args__12462__auto__.push((arguments[i__12446__auto___312]));

var G__313 = (i__12446__auto___312 + (1));
i__12446__auto___312 = G__313;
continue;
} else {
}
break;
}

var argseq__12463__auto__ = ((((2) < args__12462__auto__.length))?(new cljs.core.IndexedSeq(args__12462__auto__.slice((2)),(0),null)):null);
return reagent.ratom$macros.reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__12463__auto__);
});

(reagent.ratom$macros.reaction.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,body){
return cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("reagent.ratom","make-reaction","reagent.ratom/make-reaction",(272608527),null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",(-1065745098),null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null))),null,(1),null)),body)),null,(1),null))));
}));

(reagent.ratom$macros.reaction.cljs$lang$maxFixedArity = (2));

/** @this {Function} */
(reagent.ratom$macros.reaction.cljs$lang$applyTo = (function (seq307){
var G__308 = cljs.core.first.call(null,seq307);
var seq307__$1 = cljs.core.next.call(null,seq307);
var G__309 = cljs.core.first.call(null,seq307__$1);
var seq307__$2 = cljs.core.next.call(null,seq307__$1);
var self__12420__auto__ = this;
return self__12420__auto__.cljs$core$IFn$_invoke$arity$variadic(G__308,G__309,seq307__$2);
}));

return null;
})()
;
(reagent.ratom$macros.reaction.cljs$lang$macro = true);

var ret__12562__auto___317 = (function (){
/**
 * Runs body immediately, and runs again whenever atoms deferenced in the body change. Body should side effect.
 */
reagent.ratom$macros.run_BANG_ = (function reagent$ratom$macros$run_BANG_(var_args){
var args__12462__auto__ = [];
var len__12445__auto___318 = arguments.length;
var i__12446__auto___319 = (0);
while(true){
if((i__12446__auto___319 < len__12445__auto___318)){
args__12462__auto__.push((arguments[i__12446__auto___319]));

var G__320 = (i__12446__auto___319 + (1));
i__12446__auto___319 = G__320;
continue;
} else {
}
break;
}

var argseq__12463__auto__ = ((((2) < args__12462__auto__.length))?(new cljs.core.IndexedSeq(args__12462__auto__.slice((2)),(0),null)):null);
return reagent.ratom$macros.run_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__12463__auto__);
});

(reagent.ratom$macros.run_BANG_.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,body){
return cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","let","cljs.core/let",(-308701135),null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,"co__13__auto__","co__13__auto__",(1005606768),null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("reagent.ratom","make-reaction","reagent.ratom/make-reaction",(272608527),null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",(-1065745098),null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null))),null,(1),null)),body)),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,"auto-run","auto-run",(1958400437)),null,(1),null)),(new cljs.core.List(null,true,null,(1),null)))),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","deref","cljs.core/deref",(1901963335),null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"co__13__auto__","co__13__auto__",(1005606768),null),null,(1),null)))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"co__13__auto__","co__13__auto__",(1005606768),null),null,(1),null))));
}));

(reagent.ratom$macros.run_BANG_.cljs$lang$maxFixedArity = (2));

/** @this {Function} */
(reagent.ratom$macros.run_BANG_.cljs$lang$applyTo = (function (seq314){
var G__315 = cljs.core.first.call(null,seq314);
var seq314__$1 = cljs.core.next.call(null,seq314);
var G__316 = cljs.core.first.call(null,seq314__$1);
var seq314__$2 = cljs.core.next.call(null,seq314__$1);
var self__12420__auto__ = this;
return self__12420__auto__.cljs$core$IFn$_invoke$arity$variadic(G__315,G__316,seq314__$2);
}));

return null;
})()
;
(reagent.ratom$macros.run_BANG_.cljs$lang$macro = true);

var ret__12562__auto___328 = (function (){
reagent.ratom$macros.with_let = (function reagent$ratom$macros$with_let(var_args){
var args__12462__auto__ = [];
var len__12445__auto___329 = arguments.length;
var i__12446__auto___330 = (0);
while(true){
if((i__12446__auto___330 < len__12445__auto___329)){
args__12462__auto__.push((arguments[i__12446__auto___330]));

var G__331 = (i__12446__auto___330 + (1));
i__12446__auto___330 = G__331;
continue;
} else {
}
break;
}

var argseq__12463__auto__ = ((((3) < args__12462__auto__.length))?(new cljs.core.IndexedSeq(args__12462__auto__.slice((3)),(0),null)):null);
return reagent.ratom$macros.with_let.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__12463__auto__);
});

(reagent.ratom$macros.with_let.cljs$core$IFn$_invoke$arity$variadic = (function (_AMPERSAND_form,_AMPERSAND_env,bindings,body){
if(cljs.core.vector_QMARK_.call(null,bindings)){
} else {
throw (new Error(["Assert failed: ",["with-let bindings must be a vector, not ",cljs.core.pr_str.call(null,bindings)].join(''),"\n","(vector? bindings)"].join('')));
}

var v = cljs.core.gensym.call(null,"with-let");
var k = cljs.core.keyword.call(null,v);
var init = cljs.core.gensym.call(null,"init");
var bs = cljs.core.into.call(null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [init,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","zero?","cljs.core/zero?",(-341242858),null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","alength","cljs.core/alength",(-1012804190),null),null,(1),null)),(new cljs.core.List(null,v,null,(1),null)))),null,(1),null))))], null),cljs.core.map_indexed.call(null,(function (i,x){
if(cljs.core.even_QMARK_.call(null,i)){
return x;
} else {
var j = cljs.core.quot.call(null,i,(2));
return cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,"if","if",(1181717262),null),null,(1),null)),(new cljs.core.List(null,init,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("reagent.interop","unchecked-aset","reagent.interop/unchecked-aset",(-581483808),null),null,(1),null)),(new cljs.core.List(null,v,null,(1),null)),(new cljs.core.List(null,j,null,(1),null)),(new cljs.core.List(null,x,null,(1),null)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("reagent.interop","unchecked-aget","reagent.interop/unchecked-aget",(1753665331),null),null,(1),null)),(new cljs.core.List(null,v,null,(1),null)),(new cljs.core.List(null,j,null,(1),null)))),null,(1),null))));
}
}),bindings));
var vec__325 = (function (){var fin = cljs.core.last.call(null,body);
if(((cljs.core.list_QMARK_.call(null,fin)) && (cljs.core._EQ_.call(null,new cljs.core.Symbol(null,"finally","finally",(-1065347064),null),cljs.core.first.call(null,fin))))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.butlast.call(null,body),cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","fn","cljs.core/fn",(-1065745098),null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null))),null,(1),null)),cljs.core.rest.call(null,fin)))], null);
} else {
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [body,null], null);
}
})();
var forms = cljs.core.nth.call(null,vec__325,(0),null);
var destroy = cljs.core.nth.call(null,vec__325,(1),null);
var add_destroy = (cljs.core.truth_(destroy)?cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","let","cljs.core/let",(-308701135),null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,"destroy__14__auto__","destroy__14__auto__",(-2028479061),null),null,(1),null)),(new cljs.core.List(null,destroy,null,(1),null))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,"if","if",(1181717262),null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("reagent.ratom","reactive?","reagent.ratom/reactive?",(-358553475),null),null,(1),null)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","when","cljs.core/when",(120293186),null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","nil?","cljs.core/nil?",(945071861),null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,".-destroy",".-destroy",(1564507507),null),null,(1),null)),(new cljs.core.List(null,v,null,(1),null)))),null,(1),null)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,"set!","set!",(250714521),null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,".-destroy",".-destroy",(1564507507),null),null,(1),null)),(new cljs.core.List(null,v,null,(1),null)))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"destroy__14__auto__","destroy__14__auto__",(-2028479061),null),null,(1),null)))),null,(1),null)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,"destroy__14__auto__","destroy__14__auto__",(-2028479061),null),null,(1),null)))),null,(1),null)))),null,(1),null)))):null);
var asserting = (cljs.core.truth_(cljs.core._STAR_assert_STAR_)?true:false);
return cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","let","cljs.core/let",(-308701135),null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,v,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("reagent.ratom","with-let-values","reagent.ratom/with-let-values",(-575838306),null),null,(1),null)),(new cljs.core.List(null,k,null,(1),null)))),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","when","cljs.core/when",(120293186),null),null,(1),null)),(new cljs.core.List(null,asserting,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","when-some","cljs.core/when-some",(1033431610),null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,cljs.core.with_meta.call(null,new cljs.core.Symbol(null,"c__15__auto__","c__15__auto__",(-530213410),null),cljs.core.apply.call(null,cljs.core.array_map,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Keyword(null,"file","file",(-1269645878)),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"reagent.ratom","reagent.ratom",(-2036346616),null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,"line","line",(212345235)),null,(1),null)),(new cljs.core.List(null,(48),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,"column","column",(2078222095)),null,(1),null)),(new cljs.core.List(null,(27),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,"end-line","end-line",(1837326455)),null,(1),null)),(new cljs.core.List(null,(48),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,"end-column","end-column",(1425389514)),null,(1),null)),(new cljs.core.List(null,(29),null,(1),null)),(new cljs.core.List(null,new cljs.core.Keyword(null,"tag","tag",(-1290361223)),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol("reagent.ratom","clj","reagent.ratom/clj",(-550004342),null),null,(1),null)))))),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol("reagent.ratom","*ratom-context*","reagent.ratom/*ratom-context*",(13467415),null),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","when","cljs.core/when",(120293186),null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","==","cljs.core/==",(-632471488),null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,".-generation",".-generation",(-761706147),null),null,(1),null)),(new cljs.core.List(null,v,null,(1),null)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,".-ratomGeneration",".-ratomGeneration",(201782368),null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"c__15__auto__","c__15__auto__",(-530213410),null),null,(1),null)))),null,(1),null)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("reagent.debug","error","reagent.debug/error",(-1186466282),null),null,(1),null)),(new cljs.core.List(null,"Warning: The same with-let is being used more ",null,(1),null)),(new cljs.core.List(null,"than once in the same reactive context.",null,(1),null)))),null,(1),null)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,"set!","set!",(250714521),null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,".-generation",".-generation",(-761706147),null),null,(1),null)),(new cljs.core.List(null,v,null,(1),null)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,".-ratomGeneration",".-ratomGeneration",(201782368),null),null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"c__15__auto__","c__15__auto__",(-530213410),null),null,(1),null)))),null,(1),null)))),null,(1),null)))),null,(1),null)))),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","let","cljs.core/let",(-308701135),null),null,(1),null)),(new cljs.core.List(null,bs,null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol("cljs.core","let","cljs.core/let",(-308701135),null),null,(1),null)),(new cljs.core.List(null,cljs.core.vec.call(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,"res__16__auto__","res__16__auto__",(-1454565411),null),null,(1),null)),(new cljs.core.List(null,cljs.core.sequence.call(null,cljs.core.concat.call(null,(new cljs.core.List(null,new cljs.core.Symbol(null,"do","do",(1686842252),null),null,(1),null)),forms)),null,(1),null))))),null,(1),null)),(new cljs.core.List(null,add_destroy,null,(1),null)),(new cljs.core.List(null,new cljs.core.Symbol(null,"res__16__auto__","res__16__auto__",(-1454565411),null),null,(1),null)))),null,(1),null)))),null,(1),null))));
}));

(reagent.ratom$macros.with_let.cljs$lang$maxFixedArity = (3));

/** @this {Function} */
(reagent.ratom$macros.with_let.cljs$lang$applyTo = (function (seq321){
var G__322 = cljs.core.first.call(null,seq321);
var seq321__$1 = cljs.core.next.call(null,seq321);
var G__323 = cljs.core.first.call(null,seq321__$1);
var seq321__$2 = cljs.core.next.call(null,seq321__$1);
var G__324 = cljs.core.first.call(null,seq321__$2);
var seq321__$3 = cljs.core.next.call(null,seq321__$2);
var self__12420__auto__ = this;
return self__12420__auto__.cljs$core$IFn$_invoke$arity$variadic(G__322,G__323,G__324,seq321__$3);
}));

return null;
})()
;
(reagent.ratom$macros.with_let.cljs$lang$macro = true);


//# sourceURL=reagent/ratom$macros.js
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhZ2VudC9yYXRvbSRtYWNyb3MuanMiLCJzb3VyY2VzIjpbInJhdG9tJG1hY3Jvcy5jbGpzIl0sImxpbmVDb3VudCI6MTYyLCJtYXBwaW5ncyI6IjtBQUtBLElBQUFBLHlCQUFBO0FBQUEsZ0NBQUEsd0NBQUFDLHhFQUFVSztBQUFWLEFBQUEsSUFBQUosc0JBQUE7QUFBQSxBQUFBLElBQUFDLHlCQUFBLEFBQUE7QUFBQSxBQUFBLElBQUFDLHVCQUFBOztBQUFBLEFBQUEsR0FBQSxDQUFBQSx1QkFBQUQ7QUFBQSxBQUFBLEFBQUFELHlCQUFBLENBQUEsVUFBQUU7O0FBQUEsYUFBQSxDQUFBQSx1QkFBQTs7OztBQUFBOzs7O0FBQUEsSUFBQUMsd0JBQUEsRUFBQSxDQUFBLE1BQUEsQUFBQUgsNkJBQUEsQUFBQSwwQkFBQSxBQUFBQSwwQkFBQSxLQUFBLElBQUEsT0FBQSwvREE2bEdzRDREO0FBN2xHdEQsQUFBQSxPQUFBeEQsbUVBQUEsQ0FBQSxVQUFBLE1BQUEsQ0FBQSxVQUFBLE1BQUFEOzs7QUFBQSxBQUFBLENBQUEscUVBQUEsV0FBQUUsZ0JBQUFDLGhHQUFVRiwrR0FBWVc7QUFBdEIsQUFBQSxPQUFBUiw2QkFBQSxBQUFBQywyQkFBQSxLQUFBQyxlQUFBLEtBQUEsQUFBQSxxR0FBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLEtBQUEsQUFBQUYsNkJBQUEsQUFBQUMsMkJBQUEsS0FBQUMsZUFBQSxLQUFBLEFBQUEseUVBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLEFBQUFDLHdCQUFBLEFBQUFILDZCQUFBLEFBQUFDLDhCQUFBLEtBQUEsSUFBQSxjQUFBLEtBQUEsSUFBQSxoQkFFYU87OztBQUZiLENBQUEsd0RBQUEseERBQVVYOztBQUFWO0FBQUEsQ0FBQSxrREFBQSxXQUFBTyw3REFBVVA7QUFBVixBQUFBLElBQUFRLFNBQUEsMEJBQUFELDFCQThoR2dEMEM7SUE5aEdoRDFDLGFBQUEseUJBQUFBLHpCQStoR2tEZ0Q7SUEvaEdsRDlD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QUEsQUFBQSwwRkFBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLGFBQUEsS0FBQSxJQUFBLFVBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLEFBQUFGLDZCQUFBLEFBQUFDLDJCQUFBLEtBQUFDLGVBQUEsS0FBQSxBQUFBLHVEQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsS0FBQSxBQUFBRiw2QkFBQSxBQUFBQywyQkFBQSxLQUFBQyxlQUFBLEtBQUEsQUFBQSw4RkFBQSxLQUFBLElBQUEsU0FBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLEtBQUEsQUFBQUYsNkJBQUEsQUFBQUMsMkJBQUEsS0FBQUMsZUFBQSxLQUFBLEFBQUEsMkVBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLEFBQUFGLDZCQUFBLEFBQUFDLDJCQUFBLEtBQUFDLGVBQUEsS0FBQSxBQUFBLDJFQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsS0FBQSxBQUFBRiw2QkFBQSxBQUFBQywyQkFBQSxLQUFBQyxlQUFBLEtBQUEsQUFBQSxxRUFBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLE9BQUEsS0FBQSxJQUFBLFNBQUEsS0FBQSxJQUFBLFNBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLEFBQUFGLDZCQUFBLEFBQUFDLDJCQUFBLEtBQUFDLGVBQUEsS0FBQSxBQUFBLDBEQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsS0FBQSxBQUFBRiw2QkFBQSxBQUFBQywyQkFBQSxLQUFBQyxlQUFBLEtBQUEsQUFBQSxxRUFBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLE9BQUEsS0FBQSxJQUFBLFNBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLEFBQUEsMEZBQUEsS0FBQSxJQUFBLFNBQUEsS0FBQSxJQUFBLFNBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLEFBQUFGLDZCQUFBLEFBQUFDLDJCQUFBLEtBQUFDLGVBQUEsS0FBQSxBQUFBLDBGQUFBLEtBQUEsSUFBQSxTQUFBLEtBQUEsSUFBQSxTQUFBLEtBQUEsSUFBQSxTQUFBLHgyRUFBTXVDLHliQUNhQSx3aUNBRVlkLGtjQUNKQTtJQUV2Q3VCLFlBQVUsZ0RBQUEsS0FBQSxuQ0FBSUM7QUF2QnBCLEFBQUEsT0FBQW5ELDZCQUFBLEFBQUFDLDJCQUFBLEtBQUFDLGVBQUEsS0FBQSxBQUFBLDBFQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsS0FBQSxBQUFBQyx3QkFBQSxBQUFBSCw2QkFBQSxBQUFBQywyQkFBQSxLQUFBQyxlQUFBLE9BQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLEFBQUFGLDZCQUFBLEFBQUFDLDJCQUFBLEtBQUFDLGVBQUEsS0FBQSxBQUFBLDBHQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsT0FBQSxLQUFBLElBQUEsU0FBQSxLQUFBLElBQUEsVUFBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLEtBQUEsQUFBQUYsNkJBQUEsQUFBQUMsMkJBQUEsS0FBQUMsZUFBQSxLQUFBLEFBQUEsMkVBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxlQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsS0FBQSxBQUFBRiw2QkFBQSxBQUFBQywyQkFBQSxLQUFBQyxlQUFBLEtBQUEsQUFBQSxzRkFBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLEtBQUEsQUFBQUMsd0JBQUEsQUFBQUgsNkJBQUEsQUFBQUMsMkJBQUEsS0FBQUMsZUFBQSxLQUFBLEFBQUFzQiw4QkFBQSxBQUFBLDZFQUFBLEFBQUFDLDBCQUFBQyxvQkFBQSxBQUFBMUIsNkJBQUEsQUFBQUMsMkJBQUEsS0FBQUMsZUFBQSxLQUFBLHdEQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsS0FBQSxBQUFBLDhFQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsS0FBQSxzREFBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLEtBQUEsS0FBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLEtBQUEsMkRBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLEtBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLCtEQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsS0FBQSxLQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsS0FBQSxtRUFBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLEtBQUEsS0FBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLEtBQUEsc0RBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLEFBQUEsa0ZBQUEsS0FBQSxJQUFBLFdBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLEFBQUEsd0dBQUEsS0FBQSxJQUFBLFVBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLEFBQUFGLDZCQUFBLEFBQUFDLDJCQUFBLEtBQUFDLGVBQUEsS0FBQSxBQUFBLDJFQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsS0FBQSxBQUFBRiw2QkFBQSxBQUFBQywyQkFBQSxLQUFBQyxlQUFBLEtBQUEsQUFBQSx3RUFBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLEtBQUEsQUFBQUYsNkJBQUEsQUFBQUMsMkJBQUEsS0FBQUMsZUFBQSxLQUFBLEFBQUEsMkVBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxPQUFBLEtBQUEsSUFBQSxTQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsS0FBQSxBQUFBRiw2QkFBQSxBQUFBQywyQkFBQSxLQUFBQyxlQUFBLEtBQUEsQUFBQSxvRkFBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLEtBQUEsQUFBQSw2RUFBQSxLQUFBLElBQUEsU0FBQSxLQUFBLElBQUEsU0FBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLEtBQUEsQUFBQUYsNkJBQUEsQUFBQUMsMkJBQUEsS0FBQUMsZUFBQSxLQUFBLEFBQUEsdUZBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLGlEQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsS0FBQSwwQ0FBQSxLQUFBLElBQUEsU0FBQSxLQUFBLElBQUEsU0FBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLEtBQUEsQUFBQUYsNkJBQUEsQUFBQUMsMkJBQUEsS0FBQUMsZUFBQSxLQUFBLEFBQUEsMERBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLEFBQUFGLDZCQUFBLEFBQUFDLDJCQUFBLEtBQUFDLGVBQUEsS0FBQSxBQUFBLDJFQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsT0FBQSxLQUFBLElBQUEsU0FBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLEtBQUEsQUFBQUYsNkJBQUEsQUFBQUMsMkJBQUEsS0FBQUMsZUFBQSxLQUFBLEFBQUEsb0ZBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLEFBQUEsNkVBQUEsS0FBQSxJQUFBLFNBQUEsS0FBQSxJQUFBLFNBQUEsS0FBQSxJQUFBLFNBQUEsS0FBQSxJQUFBLFNBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLEFBQUFGLDZCQUFBLEFBQUFDLDJCQUFBLEtBQUFDLGVBQUEsS0FBQSxBQUFBLDBFQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsUUFBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLEtBQUEsQUFBQUYsNkJBQUEsQUFBQUMsMkJBQUEsS0FBQUMsZUFBQSxLQUFBLEFBQUEsMEVBQUEsS0FBQSxJQUFBLE9BQUEsS0FBQUEsZUFBQSxLQUFBLEFBQUFDLHdCQUFBLEFBQUFILDZCQUFBLEFBQUFDLDJCQUFBLEtBQUFDLGVBQUEsS0FBQSxBQUFBLGtGQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsS0FBQSxBQUFBRiw2QkFBQSxBQUFBQywyQkFBQSxLQUFBQyxlQUFBLEtBQUEsQUFBQSx1REFBQSxLQUFBLElBQUEsZUFBQSxLQUFBLElBQUEsVUFBQSxLQUFBLElBQUEsT0FBQSxLQUFBQSxlQUFBLGlCQUFBLEtBQUEsSUFBQSxPQUFBLEtBQUFBLGVBQUEsS0FBQSxBQUFBLGtGQUFBLEtBQUEsSUFBQSxTQUFBLEtBQUEsSUFBQSxTQUFBLEtBQUEsSUFBQSxoakxBd0JVeUIsK1FBQWtDRSxxUkFDaENxQiwyMUVBRXNCdkIsZ3NDQUdKQSw2b0JBQ25CSyw0bUJBQ2FRLG9FQUNkUzs7O0FBckNaLENBQUEsd0RBQUEseERBQVVwQzs7QUFBVjtBQUFBLENBQUEsa0RBQUEsV0FBQUMsN0RBQVVEO0FBQVYsQUFBQSxJQUFBRSxTQUFBLDBCQUFBRCwxQkFraEdnRGdDO0lBbGhHaERoQyxhQUFBLHlCQUFBQSx6QkFtaEdrRHNDO0lBbmhHbERwQyxTQUFBLDBCQUFBRiwxQkFraEdnRGdDO0lBbGhHaERoQyxhQUFBLHlCQUFBQSx6QkFtaEdrRHNDO0lBbmhHbERuQyxTQUFBLDBCQUFBSCwxQkFraEdnRGdDO0lBbGhHaERoQyxhQUFBLHlCQUFBQSx6QkFtaEdrRHNDO0FBbmhHbEQsQUFBQSxJQUFBN0Msc0JBQUE7QUFBQSxBQUFBLE9BQUFBLHlEQUFBUSxPQUFBQyxPQUFBQyxPQUFBSDs7O0FBQUE7OztBQUFBLEFBQUEsQ0FBQSxnREFBQSxoREFBVUQ7O0FBQVZ0QiIsIm5hbWVzIjpbInJldF9fMTI1NjJfX2F1dG9fXyIsInZhcl9hcmdzIiwiYXJnc19fMTI0NjJfX2F1dG9fXyIsImxlbl9fMTI0NDVfX2F1dG9fXyIsImlfXzEyNDQ2X19hdXRvX18iLCJhcmdzZXFfXzEyNDYzX19hdXRvX18iLCJyZWFnZW50LnJhdG9tJG1hY3Jvcy9yZWFjdGlvbiIsIiZmb3JtIiwiJmVudiIsImNsanMuY29yZS9zZXF1ZW5jZSIsImNsanMuY29yZS9jb25jYXQiLCJjbGpzLmNvcmUvTGlzdCIsImNsanMuY29yZS92ZWMiLCJzZXEzMDciLCJHX18zMDgiLCJHX18zMDkiLCJzZWxmX18xMjQyMF9fYXV0b19fIiwiYm9keSIsInJlYWdlbnQucmF0b20kbWFjcm9zL3J1biEiLCJzZXEzMTQiLCJHX18zMTUiLCJHX18zMTYiLCJyZWFnZW50LnJhdG9tJG1hY3Jvcy93aXRoLWxldCIsInNlcTMyMSIsIkdfXzMyMiIsIkdfXzMyMyIsIkdfXzMyNCIsImJpbmRpbmdzIiwianMvRXJyb3IiLCJjbGpzLmNvcmUvdmVjdG9yPyIsImNsanMuY29yZS9wci1zdHIiLCJ2ZWNfXzMyNSIsImNsanMuY29yZS9udGgiLCJjbGpzLmNvcmUvd2l0aC1tZXRhIiwiY2xqcy5jb3JlL2FwcGx5IiwiY2xqcy5jb3JlL2FycmF5LW1hcCIsInYiLCJjbGpzLmNvcmUvZ2Vuc3ltIiwiayIsImNsanMuY29yZS9rZXl3b3JkIiwiaW5pdCIsImJzIiwiY2xqcy5jb3JlL2ludG8iLCJjbGpzLmNvcmUvbWFwLWluZGV4ZWQiLCJpIiwieCIsImNsanMuY29yZS9ldmVuPyIsImoiLCJjbGpzLmNvcmUvcXVvdCIsImZvcm1zIiwiZGVzdHJveSIsImZpbiIsImNsanMuY29yZS9sYXN0IiwiY2xqcy5jb3JlL2xpc3Q/IiwiY2xqcy5jb3JlLz0iLCJjbGpzLmNvcmUvZmlyc3QiLCJjbGpzLmNvcmUvYnV0bGFzdCIsImNsanMuY29yZS9yZXN0IiwiYWRkLWRlc3Ryb3kiLCJhc3NlcnRpbmciLCJjbGpzLmNvcmUvKmFzc2VydCoiLCJjbGpzLmNvcmUvbmV4dCIsImNsanMuY29yZS9JbmRleGVkU2VxIl0sInNvdXJjZXNDb250ZW50IjpbIihucyByZWFnZW50LnJhdG9tXG4gICg6cmVmZXItY2xvanVyZSA6ZXhjbHVkZSBbcnVuIV0pXG4gICg6cmVxdWlyZSBbcmVhZ2VudC5kZWJ1ZyA6YXMgZF1cbiAgICAgICAgICAgIFtyZWFnZW50LmludGVyb3AgOmFzIGludGVyb3BdKSlcblxuKGRlZm1hY3JvIHJlYWN0aW9uIFsmIGJvZHldXG4gIGAocmVhZ2VudC5yYXRvbS9tYWtlLXJlYWN0aW9uXG4gICAgKGZuIFtdIH5AYm9keSkpKVxuXG4oZGVmbWFjcm8gcnVuIVxuICBcIlJ1bnMgYm9keSBpbW1lZGlhdGVseSwgYW5kIHJ1bnMgYWdhaW4gd2hlbmV2ZXIgYXRvbXMgZGVmZXJlbmNlZCBpbiB0aGUgYm9keSBjaGFuZ2UuIEJvZHkgc2hvdWxkIHNpZGUgZWZmZWN0LlwiXG4gIFsmIGJvZHldXG4gIGAobGV0IFtjbyMgKHJlYWdlbnQucmF0b20vbWFrZS1yZWFjdGlvbiAoZm4gW10gfkBib2R5KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6YXV0by1ydW4gdHJ1ZSldXG4gICAgIChkZXJlZiBjbyMpXG4gICAgIGNvIykpXG5cbihkZWZtYWNybyB3aXRoLWxldCBbYmluZGluZ3MgJiBib2R5XVxuICAoYXNzZXJ0ICh2ZWN0b3I/IGJpbmRpbmdzKVxuICAgICAgICAgIChzdHIgXCJ3aXRoLWxldCBiaW5kaW5ncyBtdXN0IGJlIGEgdmVjdG9yLCBub3QgXCJcbiAgICAgICAgICAgICAgIChwci1zdHIgYmluZGluZ3MpKSlcbiAgKGxldCBbdiAoZ2Vuc3ltIFwid2l0aC1sZXRcIilcbiAgICAgICAgayAoa2V5d29yZCB2KVxuICAgICAgICBpbml0IChnZW5zeW0gXCJpbml0XCIpXG4gICAgICAgIGJzIChpbnRvIFtpbml0IGAoemVybz8gKGFsZW5ndGggfnYpKV1cbiAgICAgICAgICAgICAgICAgKG1hcC1pbmRleGVkIChmbiBbaSB4XVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoaWYgKGV2ZW4/IGkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChsZXQgW2ogKHF1b3QgaSAyKV1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGAoaWYgfmluaXRcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChpbnRlcm9wL3VuY2hlY2tlZC1hc2V0IH52IH5qIH54KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGludGVyb3AvdW5jaGVja2VkLWFnZXQgfnYgfmopKSkpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmluZGluZ3MpKVxuICAgICAgICBbZm9ybXMgZGVzdHJveV0gKGxldCBbZmluIChsYXN0IGJvZHkpXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAoaWYgKGFuZCAobGlzdD8gZmluKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAoPSAnZmluYWxseSAoZmlyc3QgZmluKSkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgWyhidXRsYXN0IGJvZHkpIGAoZm4gW10gfkAocmVzdCBmaW4pKV1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBbYm9keSBuaWxdKSlcbiAgICAgICAgYWRkLWRlc3Ryb3kgKHdoZW4gZGVzdHJveVxuICAgICAgICAgICAgICAgICAgICAgIGAobGV0IFtkZXN0cm95IyB+ZGVzdHJveV1cbiAgICAgICAgICAgICAgICAgICAgICAgICAoaWYgKHJlYWdlbnQucmF0b20vcmVhY3RpdmU/KVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgKHdoZW4gKG5pbD8gKC4tZGVzdHJveSB+dikpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgIChzZXQhICguLWRlc3Ryb3kgfnYpIGRlc3Ryb3kjKSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgIChkZXN0cm95IykpKSlcbiAgICAgICAgYXNzZXJ0aW5nIChpZiAqYXNzZXJ0KiB0cnVlIGZhbHNlKV1cbiAgICBgKGxldCBbfnYgKHJlYWdlbnQucmF0b20vd2l0aC1sZXQtdmFsdWVzIH5rKV1cbiAgICAgICAod2hlbiB+YXNzZXJ0aW5nXG4gICAgICAgICAod2hlbi1zb21lIFteY2xqIGMjIHJlYWdlbnQucmF0b20vKnJhdG9tLWNvbnRleHQqXVxuICAgICAgICAgICAod2hlbiAoPT0gKC4tZ2VuZXJhdGlvbiB+dikgKC4tcmF0b21HZW5lcmF0aW9uIGMjKSlcbiAgICAgICAgICAgICAoZC9lcnJvciBcIldhcm5pbmc6IFRoZSBzYW1lIHdpdGgtbGV0IGlzIGJlaW5nIHVzZWQgbW9yZSBcIlxuICAgICAgICAgICAgICAgICAgICAgIFwidGhhbiBvbmNlIGluIHRoZSBzYW1lIHJlYWN0aXZlIGNvbnRleHQuXCIpKVxuICAgICAgICAgICAoc2V0ISAoLi1nZW5lcmF0aW9uIH52KSAoLi1yYXRvbUdlbmVyYXRpb24gYyMpKSkpXG4gICAgICAgKGxldCB+YnNcbiAgICAgICAgIChsZXQgW3JlcyMgKGRvIH5AZm9ybXMpXVxuICAgICAgICAgICB+YWRkLWRlc3Ryb3lcbiAgICAgICAgICAgcmVzIykpKSkpXG4iXX0=