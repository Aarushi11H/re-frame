["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$console",["^ ","~$log",["^ ","~$bind",["^ "]],"~$warn",["^ ","^5",["^ "]],"~$error",["^ ","^5",["^ "]],"~$debug",["^ ","^5",["^ "]],"~$group",["^ ","^5",["^ "]],"~$groupEnd",["^ ","^5",["^ "]]],"~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$re-frame.loggers","~:imports",null,"~:requires",["^ ","~$clojure.set","^C"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$difference","^C"],"~:defs",["^ ","~$loggers",["^ ","~:meta",["^ ","~:file","^@","~:line",14,"~:column",16,"~:end-line",14,"~:end-column",23,"~:private",true],"^O",true,"^?","~$re-frame.loggers/loggers","^J","re_frame/loggers.cljc","^N",23,"^L",1,"^K",14,"^M",14,"~:tag","~$cljs.core/Atom","~:doc","Holds the current set of logging functions.\n   By default, re-frame uses the functions provided by js/console.\n   Use `set-loggers!` to change these defaults\n  "],"^3",["^ ","~:protocol-inline",null,"^I",["^ ","^J","^@","^K",37,"^L",7,"^M",37,"^N",14,"~:arglists",["~#list",["~$quote",["^V",[["~$level","~$&","~$args"]]]]],"~:top-fn",["^ ","~:variadic?",true,"~:fixed-arity",1,"~:max-fixed-arity",1,"~:method-params",[["^V",["^X","^Y"]]],"^U",["^V",[["^X","~$&","^Y"]]],"~:arglists-meta",["^V",[null]]]],"^?","~$re-frame.loggers/console","^J","re_frame/loggers.cljc","^N",14,"^Z",["^ ","^[",true,"^10",1,"^11",1,"^12",[["^V",["^X","^Y"]]],"^U",["^V",[["^X","~$&","^Y"]]],"^13",["^V",[null]]],"^12",[["^V",["^X","^Y"]]],"~:protocol-impl",null,"^10",1,"^13",["^V",[null]],"^L",1,"^[",true,"~:methods",[["^ ","^10",1,"^[",true,"^Q","~$any"]],"^K",37,"~:ret-tag","^17","^M",37,"^11",1,"~:fn-var",true,"^U",["^V",[["^X","~$&","^Y"]]]],"~$set-loggers!",["^ ","^T",null,"^I",["^ ","^J","^@","^K",43,"^L",7,"^M",43,"^N",19,"^U",["^V",["^W",["^V",[["~$new-loggers"]]]]],"^S","Change the set (or a subset) of logging functions used by re-frame.\n  `new-loggers` should be a map with the same keys as `loggers` (above)"],"^?","~$re-frame.loggers/set-loggers!","^J","re_frame/loggers.cljc","^N",19,"^12",["^V",[["^1;"]]],"^15",null,"^13",["^V",[null,null]],"^L",1,"^[",false,"^K",43,"^18",["^>",[null,"^17"]],"^M",43,"^11",1,"^19",true,"^U",["^V",["^W",["^V",[["^1;"]]]]],"^S","Change the set (or a subset) of logging functions used by re-frame.\n  `new-loggers` should be a map with the same keys as `loggers` (above)"],"~$get-loggers",["^ ","^T",null,"^I",["^ ","^J","^@","^K",50,"^L",7,"^M",50,"^N",18,"^U",["^V",["^W",["^V",[[]]]]],"^S","Get the current logging functions used by re-frame."],"^?","~$re-frame.loggers/get-loggers","^J","re_frame/loggers.cljc","^N",18,"^12",["^V",[[]]],"^15",null,"^13",["^V",[null,null]],"^L",1,"^[",false,"^K",50,"^18","^17","^M",50,"^11",0,"^19",true,"^U",["^V",["^W",["^V",[[]]]]],"^S","Get the current logging functions used by re-frame."]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ "],"~:cljs.analyzer/constants",["^ ","~:seen",["^>",["~:log","~:warn","~:error","~:debug","~:group","~:groupEnd"]],"~:order",["^1C","^1D","^1E","^1F","^1G","^1H"]],"^S",null]